{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Workspace\\\\GitHub\\\\Expotential-PS\\\\FrontEnd\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Login.jsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // ✅ 1. 로딩 상태 변수 추가\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    setIsLoading(true); // ✅ 2. 로그인 시작 -> 로딩 상태 true\n    setMessage(''); // 이전 메시지 초기화\n\n    try {\n      const res = await axios.post('/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      alert(res.data.message || '로그인 및 점수 동기화 성공!');\n      navigate('/');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || '로그인 요청 중 오류가 발생했습니다.');\n    } finally {\n      setIsLoading(false); // ✅ 3. 요청 완료 (성공/실패 무관) -> 로딩 상태 false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: {\n        marginBottom: '20px',\n        width: '200px'\n      },\n      disabled: isLoading // 로딩 중에는 입력 방지\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        marginBottom: '40px',\n        width: '200px'\n      },\n      disabled: isLoading // 로딩 중에는 입력 방지\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: isLoading ? '로그인 및 점수 동기화 중...' : '로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HVDJY6Rah9TzU2wRpGk1j1EaOLA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","message","setMessage","isLoading","setIsLoading","navigate","handleLogin","res","post","localStorage","setItem","data","token","alert","error","_error$response","_error$response$data","console","response","style","display","flexDirection","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginBottom","width","disabled","onClick","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/PC/Workspace/GitHub/Expotential-PS/FrontEnd/src/pages/Login.jsx"],"sourcesContent":["// src/pages/Login.jsx\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false); // ✅ 1. 로딩 상태 변수 추가\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    setIsLoading(true); // ✅ 2. 로그인 시작 -> 로딩 상태 true\r\n    setMessage(''); // 이전 메시지 초기화\r\n\r\n    try {\r\n      const res = await axios.post('/login', { email, password });\r\n      \r\n      localStorage.setItem('token', res.data.token);\r\n      alert(res.data.message || '로그인 및 점수 동기화 성공!');\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setMessage(error.response?.data?.message || '로그인 요청 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setIsLoading(false); // ✅ 3. 요청 완료 (성공/실패 무관) -> 로딩 상태 false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '80vh'\r\n    }}>\r\n      <h1>로그인</h1>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"이메일\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={{ marginBottom: '20px', width: '200px' }}\r\n        disabled={isLoading} // 로딩 중에는 입력 방지\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"비밀번호\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        style={{ marginBottom: '40px', width: '200px' }}\r\n        disabled={isLoading} // 로딩 중에는 입력 방지\r\n      />\r\n\r\n      {/* ✅ 4. 로딩 상태에 따라 버튼 내용 변경 및 비활성화 */}\r\n      <button onClick={handleLogin} disabled={isLoading}>\r\n        {isLoading ? '로그인 및 점수 동기화 중...' : '로그인'}\r\n      </button>\r\n\r\n      {/* 메시지가 있을 때만 보이도록 수정 */}\r\n      {message && <p style={{ color: 'red', marginTop: '20px' }}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}