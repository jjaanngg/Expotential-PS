{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Workspace\\\\GitHub\\\\Expotential-PS\\\\FrontEnd\\\\src\\\\pages\\\\SetDetail.jsx\",\n  _s = $RefreshSig$();\n// src/pages/SetDetail.jsx\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport api from '../api'; // ✅ axios 대신 api를 import 합니다.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SetDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [problems, setProblems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [solvedMap, setSolvedMap] = useState({});\n  const [claimedMap, setClaimedMap] = useState({});\n  const handleClaim = async problemId => {\n    try {\n      const res = await api.post(\"/api/reward/claim\", {\n        problemId\n      });\n      alert(`보상 지급 완료! 현재 보유 코인: ${res.data.currency}`);\n      setClaimedMap(prev => ({\n        ...prev,\n        [problemId]: true\n      }));\n    } catch (err) {\n      var _err$response, _err$response2;\n      if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        alert(\"이미 보상받은 문제입니다.\");\n        setClaimedMap(prev => ({\n          ...prev,\n          [problemId]: true\n        }));\n        return;\n      }\n      if ((err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        alert(\"로그인이 필요합니다.\");\n        navigate(\"/login\");\n        return;\n      }\n      console.error(\"보상 지급 실패:\", err);\n      alert(\"보상 처리 중 오류 발생\");\n    }\n  };\n\n  // 세트 상세 정보 로드\n  useEffect(() => {\n    setErrorMsg('');\n    setLoading(true);\n    api.get(`/api/sets/${id}`) // ✅ axios.get을 api.get으로 변경\n    .then(res => {\n      setTitle(res.data.title || '');\n      setProblems(res.data.problems || []);\n    }).catch(err => {\n      console.error('세트 상세 불러오기 실패:', err);\n      setErrorMsg('세트 정보를 불러오지 못했습니다.');\n    }).finally(() => setLoading(false));\n  }, [id]);\n\n  // 세트 전체 새로고침 (모든 문제 풀이 여부 확인)\n  const handleRefreshAll = async () => {\n    setErrorMsg('');\n    if (!allProblemIds.length) return;\n    try {\n      var _res$data$results, _res$data;\n      setRefreshing(true);\n      // ✅ axios.post를 api.post로 변경 (api가 토큰을 자동으로 포함해줍니다)\n      const res = await api.post('/api/solve-status', {\n        problems: allProblemIds\n      });\n      const resultArray = (_res$data$results = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.results) !== null && _res$data$results !== void 0 ? _res$data$results : [];\n      const next = {};\n      for (const r of resultArray) {\n        if (r && typeof r.problemId === 'number') {\n          next[r.problemId] = !!r.solved;\n        }\n      }\n      setSolvedMap(next);\n    } catch (err) {\n      console.error('세트 새로고침 실패:', err);\n      setErrorMsg('풀이 여부 확인 중 오류가 발생했습니다.');\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  // -------------------------------------------------------------------\n  // 아래의 나머지 코드들은 수정할 필요가 없습니다. (useMemo, tierText, return 부분)\n  // -------------------------------------------------------------------\n\n  const allProblemIds = useMemo(() => problems.map(p => p.problemId).filter(Boolean), [problems]);\n  const tierText = tier => {\n    const groups = [{\n      name: 'Bronze',\n      range: [1, 5]\n    }, {\n      name: 'Silver',\n      range: [6, 10]\n    }, {\n      name: 'Gold',\n      range: [11, 15]\n    }, {\n      name: 'Platinum',\n      range: [16, 20]\n    }];\n    for (const {\n      name,\n      range\n    } of groups) {\n      const [start, end] = range;\n      if (tier >= start && tier <= end) {\n        const level = end - tier + 1;\n        return `${name} ${level}`;\n      }\n    }\n    return 'Unrated';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/sets'),\n      style: {\n        marginBottom: '20px',\n        padding: '8px 16px',\n        borderRadius: '5px',\n        border: '1px solid #ccc',\n        cursor: 'pointer',\n        background: '#f5f5f5'\n      },\n      children: \"\\u2190 \\uC138\\uD2B8 \\uBAA9\\uB85D\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'crimson'\n      },\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 20\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefreshAll,\n        disabled: refreshing || allProblemIds.length === 0,\n        style: {\n          padding: '8px 16px',\n          borderRadius: '6px',\n          border: '1px solid #bbb',\n          cursor: refreshing ? 'not-allowed' : 'pointer',\n          background: refreshing ? '#f0f0f0' : '#e8f4ff',\n          fontWeight: 600\n        },\n        children: refreshing ? '확인 중...' : '세트 전체 새로고침'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBB38\\uC81C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        margin: '0 auto',\n        borderCollapse: 'collapse',\n        minWidth: 800\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: 8,\n              borderBottom: '1px solid #ddd'\n            },\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: 8,\n              borderBottom: '1px solid #ddd'\n            },\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: 8,\n              borderBottom: '1px solid #ddd'\n            },\n            children: \"\\uD2F0\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: 8,\n              borderBottom: '1px solid #ddd'\n            },\n            children: \"\\uD47C \\uC0AC\\uB78C \\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: 8,\n              borderBottom: '1px solid #ddd'\n            },\n            children: \"\\uC0C1\\uD0DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: problems.map(p => {\n          var _p$solvedCount$toLoca, _p$solvedCount, _p$solvedCount$toLoca2;\n          const solved = solvedMap[p.problemId];\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: 8,\n                borderBottom: '1px solid #f0f0f0'\n              },\n              children: p.problemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: 8,\n                borderBottom: '1px solid #f0f0f0'\n              },\n              children: p.titleKo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: 8,\n                borderBottom: '1px solid #f0f0f0'\n              },\n              children: tierText(p.tier)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: 8,\n                borderBottom: '1px solid #f0f0f0'\n              },\n              children: (_p$solvedCount$toLoca = (_p$solvedCount = p.solvedCount) === null || _p$solvedCount === void 0 ? void 0 : (_p$solvedCount$toLoca2 = _p$solvedCount.toLocaleString) === null || _p$solvedCount$toLoca2 === void 0 ? void 0 : _p$solvedCount$toLoca2.call(_p$solvedCount)) !== null && _p$solvedCount$toLoca !== void 0 ? _p$solvedCount$toLoca : p.solvedCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: 8,\n                borderBottom: '1px solid #f0f0f0'\n              },\n              children: solved === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#14804a',\n                    fontWeight: 700,\n                    marginRight: 8\n                  },\n                  children: \"\\uD574\\uACB0\\uB428\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleClaim(p.problemId),\n                  disabled: claimedMap[p.problemId] === true,\n                  style: {\n                    padding: '4px 8px',\n                    borderRadius: '5px',\n                    border: '1px solid #aaa',\n                    cursor: claimedMap[p.problemId] ? 'not-allowed' : 'pointer',\n                    background: claimedMap[p.problemId] ? '#f0f0f0' : '#e0ffe0',\n                    fontWeight: 600\n                  },\n                  children: claimedMap[p.problemId] ? '지급 완료' : '보상 받기'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : solved === false ? /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#8a0000',\n                  fontWeight: 700\n                },\n                children: \"\\uBBF8\\uD574\\uACB0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#666'\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)]\n          }, p.problemId || p._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), !loading && problems.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 16\n      },\n      children: [\"\\uD655\\uC778\\uB41C \\uBB38\\uC81C \\uC218: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: Object.keys(solvedMap).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), \" / \", problems.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(SetDetail, \"IpD/HPp53Jd/1cthLF20v4VuHpQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SetDetail;\nexport default SetDetail;\nvar _c;\n$RefreshReg$(_c, \"SetDetail\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useNavigate","useParams","api","jsxDEV","_jsxDEV","Fragment","_Fragment","SetDetail","_s","id","navigate","title","setTitle","problems","setProblems","loading","setLoading","refreshing","setRefreshing","errorMsg","setErrorMsg","solvedMap","setSolvedMap","claimedMap","setClaimedMap","handleClaim","problemId","res","post","alert","data","currency","prev","err","_err$response","_err$response2","response","status","console","error","get","then","catch","finally","handleRefreshAll","allProblemIds","length","_res$data$results","_res$data","resultArray","results","next","r","solved","map","p","filter","Boolean","tierText","tier","groups","name","range","start","end","level","style","padding","textAlign","children","onClick","marginBottom","borderRadius","border","cursor","background","fileName","_jsxFileName","lineNumber","columnNumber","color","disabled","fontWeight","margin","borderCollapse","minWidth","borderBottom","_p$solvedCount$toLoca","_p$solvedCount","_p$solvedCount$toLoca2","titleKo","solvedCount","toLocaleString","call","marginRight","_id","marginTop","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/PC/Workspace/GitHub/Expotential-PS/FrontEnd/src/pages/SetDetail.jsx"],"sourcesContent":["// src/pages/SetDetail.jsx\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport api from '../api'; // ✅ axios 대신 api를 import 합니다.\r\n\r\nconst SetDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [problems, setProblems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [solvedMap, setSolvedMap] = useState({});\r\n  const [claimedMap, setClaimedMap] = useState({});\r\n\r\n  const handleClaim = async (problemId) => {\r\n    try {\r\n      const res = await api.post(\"/api/reward/claim\", { problemId });\r\n      alert(`보상 지급 완료! 현재 보유 코인: ${res.data.currency}`);\r\n      setClaimedMap(prev => ({ ...prev, [problemId]: true }));\r\n    } catch (err) {\r\n      if (err?.response?.status === 409) {\r\n        alert(\"이미 보상받은 문제입니다.\");\r\n        setClaimedMap(prev => ({ ...prev, [problemId]: true }));\r\n        return;\r\n      }\r\n      if (err?.response?.status === 401) {\r\n        alert(\"로그인이 필요합니다.\"); navigate(\"/login\"); return;\r\n      }\r\n      console.error(\"보상 지급 실패:\", err);\r\n      alert(\"보상 처리 중 오류 발생\");\r\n    }\r\n  };\r\n\r\n  // 세트 상세 정보 로드\r\n  useEffect(() => {\r\n    setErrorMsg('');\r\n    setLoading(true);\r\n    api.get(`/api/sets/${id}`) // ✅ axios.get을 api.get으로 변경\r\n      .then(res => {\r\n        setTitle(res.data.title || '');\r\n        setProblems(res.data.problems || []);\r\n      })\r\n      .catch(err => {\r\n        console.error('세트 상세 불러오기 실패:', err);\r\n        setErrorMsg('세트 정보를 불러오지 못했습니다.');\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [id]);\r\n\r\n  // 세트 전체 새로고침 (모든 문제 풀이 여부 확인)\r\n  const handleRefreshAll = async () => {\r\n    setErrorMsg('');\r\n    if (!allProblemIds.length) return;\r\n\r\n    try {\r\n      setRefreshing(true);\r\n      // ✅ axios.post를 api.post로 변경 (api가 토큰을 자동으로 포함해줍니다)\r\n      const res = await api.post('/api/solve-status', { problems: allProblemIds });\r\n\r\n      const resultArray = res?.data?.results ?? [];\r\n      const next = {};\r\n      for (const r of resultArray) {\r\n        if (r && typeof r.problemId === 'number') {\r\n          next[r.problemId] = !!r.solved;\r\n        }\r\n      }\r\n      setSolvedMap(next);\r\n    } catch (err) {\r\n      console.error('세트 새로고침 실패:', err);\r\n      setErrorMsg('풀이 여부 확인 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  // -------------------------------------------------------------------\r\n  // 아래의 나머지 코드들은 수정할 필요가 없습니다. (useMemo, tierText, return 부분)\r\n  // -------------------------------------------------------------------\r\n  \r\n  const allProblemIds = useMemo(\r\n    () => problems.map(p => p.problemId).filter(Boolean),\r\n    [problems]\r\n  );\r\n  \r\n  const tierText = (tier) => {\r\n    const groups = [\r\n      { name: 'Bronze', range: [1, 5] },\r\n      { name: 'Silver', range: [6, 10] },\r\n      { name: 'Gold', range: [11, 15] },\r\n      { name: 'Platinum', range: [16, 20] },\r\n    ];\r\n    for (const { name, range } of groups) {\r\n      const [start, end] = range;\r\n      if (tier >= start && tier <= end) {\r\n        const level = end - tier + 1;\r\n        return `${name} ${level}`;\r\n      }\r\n    }\r\n    return 'Unrated';\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '40px', textAlign: 'center' }}>\r\n      <button onClick={() => navigate('/sets')} style={{\r\n        marginBottom: '20px',\r\n        padding: '8px 16px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #ccc',\r\n        cursor: 'pointer',\r\n        background: '#f5f5f5'\r\n      }}>\r\n        ← 세트 목록으로 돌아가기\r\n      </button>\r\n\r\n      <h2>{title}</h2>\r\n      {errorMsg && <p style={{ color: 'crimson' }}>{errorMsg}</p>}\r\n\r\n      {!loading && (\r\n        <div style={{ marginBottom: 16 }}>\r\n          <button\r\n            onClick={handleRefreshAll}\r\n            disabled={refreshing || allProblemIds.length === 0}\r\n            style={{\r\n              padding: '8px 16px',\r\n              borderRadius: '6px',\r\n              border: '1px solid #bbb',\r\n              cursor: refreshing ? 'not-allowed' : 'pointer',\r\n              background: refreshing ? '#f0f0f0' : '#e8f4ff',\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            {refreshing ? '확인 중...' : '세트 전체 새로고침'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <p>문제 불러오는 중...</p>\r\n      ) : (\r\n        <table style={{ margin: '0 auto', borderCollapse: 'collapse', minWidth: 800 }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ padding: 8, borderBottom: '1px solid #ddd' }}>ID</th>\r\n              <th style={{ padding: 8, borderBottom: '1px solid #ddd' }}>제목</th>\r\n              <th style={{ padding: 8, borderBottom: '1px solid #ddd' }}>티어</th>\r\n              <th style={{ padding: 8, borderBottom: '1px solid #ddd' }}>푼 사람 수</th>\r\n              <th style={{ padding: 8, borderBottom: '1px solid #ddd' }}>상태</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {problems.map(p => {\r\n              const solved = solvedMap[p.problemId];\r\n              return (\r\n                <tr key={p.problemId || p._id}>\r\n                  <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>{p.problemId}</td>\r\n                  <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>{p.titleKo}</td>\r\n                  <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>{tierText(p.tier)}</td>\r\n                  <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>{p.solvedCount?.toLocaleString?.() ?? p.solvedCount}</td>\r\n                  <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>\r\n                    {solved === true ? (\r\n                      <>\r\n                        <span style={{ color: '#14804a', fontWeight: 700, marginRight: 8 }}>해결됨</span>\r\n                        <button\r\n                          onClick={() => handleClaim(p.problemId)}\r\n                          disabled={claimedMap[p.problemId] === true}\r\n                          style={{\r\n                            padding: '4px 8px',\r\n                            borderRadius: '5px',\r\n                            border: '1px solid #aaa',\r\n                            cursor: claimedMap[p.problemId] ? 'not-allowed' : 'pointer',\r\n                            background: claimedMap[p.problemId] ? '#f0f0f0' : '#e0ffe0',\r\n                            fontWeight: 600\r\n                          }}\r\n                        >\r\n                          {claimedMap[p.problemId] ? '지급 완료' : '보상 받기'}\r\n                        </button>\r\n                      </>\r\n                    ) : solved === false ? (\r\n                      <span style={{ color: '#8a0000', fontWeight: 700 }}>미해결</span>\r\n                    ) : (\r\n                      <span style={{ color: '#666' }}>-</span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {!loading && problems.length > 0 && (\r\n        <p style={{ marginTop: 16 }}>\r\n          확인된 문제 수: <b>{Object.keys(solvedMap).length}</b> / {problems.length}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}