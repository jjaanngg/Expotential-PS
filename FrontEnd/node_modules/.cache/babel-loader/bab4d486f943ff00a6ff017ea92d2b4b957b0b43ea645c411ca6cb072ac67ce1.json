{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Workspace\\\\GitHub\\\\Expotential-PS\\\\FrontEnd\\\\src\\\\pages\\\\UserList.jsx\",\n  _s = $RefreshSig$();\n// UserList.jsx\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]); // 사용자 목록\n  const [loading, setLoading] = useState(true); // 로딩 상태\n  const [error, setError] = useState(null); // 오류 메시지\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const token = localStorage.getItem('token'); // 저장된 JWT 토큰 불러오기\n\n      if (!token) {\n        setError('로그인이 필요합니다.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await fetch('/users', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // JWT 토큰을 Authorization 헤더에 포함\n          },\n          credentials: 'include' // 추가된 줄\n        });\n        if (!res.ok) {\n          if (res.status === 401) {\n            setError('인증이 필요합니다.');\n          } else if (res.status === 403) {\n            setError('접근 권한이 없습니다.');\n          } else {\n            setError('사용자 정보를 불러오는 데 실패했습니다.');\n          }\n          return;\n        }\n        const data = await res.json();\n        setUsers(data); // 사용자 목록 상태에 저장\n      } catch (err) {\n        console.error('사용자 목록 요청 중 오류:', err);\n        setError('서버와의 연결 중 오류 발생');\n      } finally {\n        setLoading(false); // 성공 여부와 관계없이 로딩 종료\n      }\n    };\n    fetchUsers(); // 컴포넌트 마운트 시 1회 실행\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: users.map((user, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          marginBottom: '10px',\n          width: '300px',\n          margin: '0 auto 10px auto',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uB2C9\\uB124\\uC784:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 18\n          }, this), \" \", user.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC774\\uBA54\\uC77C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 18\n          }, this), \" \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"vvG5G9m+JVa2SSWAm277lQVAKio=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","loading","setLoading","error","setError","fetchUsers","token","localStorage","getItem","res","fetch","headers","credentials","ok","status","data","json","err","console","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","listStyle","map","user","idx","border","marginBottom","width","margin","borderRadius","nickname","email","_c","$RefreshReg$"],"sources":["C:/Users/PC/Workspace/GitHub/Expotential-PS/FrontEnd/src/pages/UserList.jsx"],"sourcesContent":["// UserList.jsx\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);         // 사용자 목록\r\n  const [loading, setLoading] = useState(true);   // 로딩 상태\r\n  const [error, setError] = useState(null);       // 오류 메시지\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const token = localStorage.getItem('token'); // 저장된 JWT 토큰 불러오기\r\n\r\n      if (!token) {\r\n        setError('로그인이 필요합니다.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await fetch('/users', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`  // JWT 토큰을 Authorization 헤더에 포함\r\n          },\r\n          credentials: 'include', // 추가된 줄\r\n        });\r\n\r\n        if (!res.ok) {\r\n          if (res.status === 401) {\r\n            setError('인증이 필요합니다.');\r\n          } else if (res.status === 403) {\r\n            setError('접근 권한이 없습니다.');\r\n          } else {\r\n            setError('사용자 정보를 불러오는 데 실패했습니다.');\r\n          }\r\n          return;\r\n        }\r\n\r\n        const data = await res.json();\r\n        setUsers(data); // 사용자 목록 상태에 저장\r\n\r\n      } catch (err) {\r\n        console.error('사용자 목록 요청 중 오류:', err);\r\n        setError('서버와의 연결 중 오류 발생');\r\n      } finally {\r\n        setLoading(false); // 성공 여부와 관계없이 로딩 종료\r\n      }\r\n    };\r\n\r\n    fetchUsers(); // 컴포넌트 마운트 시 1회 실행\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '40px', textAlign: 'center' }}>\r\n      <h2>사용자 목록</h2>\r\n      {loading ? (\r\n        <p>불러오는 중...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <ul style={{ listStyle: 'none', padding: 0 }}>\r\n          {users.map((user, idx) => (\r\n            <li key={idx} style={{\r\n              border: '1px solid #ccc',\r\n              padding: '10px',\r\n              marginBottom: '10px',\r\n              width: '300px',\r\n              margin: '0 auto 10px auto',\r\n              borderRadius: '8px'\r\n            }}>\r\n              <p><strong>닉네임:</strong> {user.nickname}</p>\r\n              <p><strong>이메일:</strong> {user.email}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}