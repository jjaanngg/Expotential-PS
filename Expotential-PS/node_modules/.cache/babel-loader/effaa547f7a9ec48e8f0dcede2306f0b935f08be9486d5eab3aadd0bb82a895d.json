{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Workspace\\\\GitHub\\\\Expotential-PS\\\\Expotential-PS\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n//Login.jsx\nimport React, { useState } from 'react'; // 상태 저장 기능 이용 useState\nimport { useNavigate } from 'react-router-dom'; // URL에 따라서 화면 이동시켜야 하기 때문에 useNavigate 사용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 22\n  }, this);\n  // 변수 선언하고 변수 값 바꾸는 함수 선언하고 반복\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  // 변수 선언하고 변수 값 바꾸는 함수 선언하고 반복\n  const handleLogin = async () => {\n    // await 사용할거라 async 조건 추가\n    // 여기서 fetch는 브라우저에서 해당 서버에 요청을 보내는 함수, GEt이나 POSt. 여기서는 POST임\n    try {\n      const res = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        localStorage.setItem('token', data.token);\n        alert('Login Completed');\n        alert(data.message);\n        navigate('/'); // 로그인 성공 시 홈으로 이동.\n      } else {\n        setMessage('Login Fail: Wrong Password');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setMessage('Login 요청 중 오류 발생');\n    }\n  };\n  // return은 코드 전체 함수가 화면에 무엇을 보여줄지 반환하는 것, HTML과 매우 유사함\n  // input은 입력받는 박스 만드는 역할\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: {\n        marginBottom: '20px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        marginBottom: '40px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n// App 컴포넌트를 외부에서도 사용할 수 있게 export (기본 export)\n_s(Login, \"E5bsmhd85L1SSLbrdMDQU2nUF8c=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","className","fileName","_jsxFileName","lineNumber","columnNumber","email","setEmail","password","setPassword","message","setMessage","navigate","handleLogin","res","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","alert","error","console","style","display","flexDirection","justifyContent","alignItems","height","children","type","placeholder","value","onChange","e","target","marginBottom","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Workspace/GitHub/Expotential-PS/Expotential-PS/src/pages/Login.jsx"],"sourcesContent":["//Login.jsx\r\nimport React, {useState} from 'react'; // 상태 저장 기능 이용 useState\r\nimport { useNavigate } from 'react-router-dom';  // URL에 따라서 화면 이동시켜야 하기 때문에 useNavigate 사용\r\n\r\n\r\nconst Login = () => {<div className=\"\"></div>\r\n\t\t// 변수 선언하고 변수 값 바꾸는 함수 선언하고 반복\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\t\t\r\n\t\t// 변수 선언하고 변수 값 바꾸는 함수 선언하고 반복\r\n    const handleLogin = async () => { // await 사용할거라 async 조건 추가\r\n\t\t    // 여기서 fetch는 브라우저에서 해당 서버에 요청을 보내는 함수, GEt이나 POSt. 여기서는 POST임\r\n        try {\r\n          const res = await fetch('http://localhost:4000/login', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email, password}),\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n          localStorage.setItem('token', data.token);\r\n          alert('Login Completed');\r\n          alert(data.message);\r\n          navigate('/'); // 로그인 성공 시 홈으로 이동.\r\n        }\r\n        else {\r\n          setMessage('Login Fail: Wrong Password');\r\n        }\r\n      }  catch (error) {\r\n          console.error('Login error:', error);\r\n          setMessage('Login 요청 중 오류 발생');\r\n        }\r\n    };\r\n\t\t// return은 코드 전체 함수가 화면에 무엇을 보여줄지 반환하는 것, HTML과 매우 유사함\r\n\t\t// input은 입력받는 박스 만드는 역할\r\n    return (\r\n      <div style={{ \r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '80vh'\r\n      }}>\r\n\r\n        <h1>로그인</h1>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          style={{ marginBottom: '20px', width: '200px' }}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          style={{ marginBottom: '40px', width: '200px' }}\r\n        />\r\n\r\n        <button onClick={handleLogin}>로그인</button>\r\n        <p>{message}</p>\r\n      </div>\r\n    );\r\n};\r\n\r\n// App 컴포넌트를 외부에서도 사용할 수 있게 export (기본 export)\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}