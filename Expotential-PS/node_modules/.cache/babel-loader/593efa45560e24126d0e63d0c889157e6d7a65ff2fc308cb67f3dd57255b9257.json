{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Workspace\\\\GitHub\\\\Expotential-PS\\\\Expotential-PS\\\\src\\\\pages\\\\Signup.jsx\",\n  _s = $RefreshSig$();\n// Signup.jsx\nimport React, { useState } from 'react'; // 상태 저장 기능 이용 useState\nimport { useNavigate } from 'react-router-dom'; // URL에 따라서 화면 이동시켜야 하기 때문에 useNavigate 사용\n\n// const는 변수 선언의 역할로 함수도 넣을 수 있음\n// => 는 앞으로 이러한 함수들을 선언된 변수에 추가할 것이다를 암시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  // 변수 선언하고 변수 값 바꾸는 함수 선언하고 반복\n  const [nickname, setNickname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  //Signup 안에서 useNavigate 사용되기 때문에 무조건 변수 선언 부분에 넣어줘야 함\n\n  // 얘도 변수 선언이지만 async를 쓰면 서버 응답 기다릴 수 있는 await 사용 가능해서 씀(비동기 함수)\n  const handleSignup = async () => {\n    // 하나라도 입력 안된 상황 처리\n    if (!nickname || !email || !password) {\n      setMessage('모든 항목을 입력해주세요.');\n      return;\n    }\n    // 일단 시도해보는 녀석\n    // 여기서 fetch는 브라우저에서 해당 서버에 요청을 보내는 함수, GEt이나 POSt. 여기서는 POST임\n    try {\n      const res = await fetch('http://localhost:4000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nickname,\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert('Signup Completed!');\n        navigate('/login'); // 가입 완료 후 로그인 페이지로 이동\n      } else {\n        setMessage(` ${data.message || 'Signup Failed'}`);\n      }\n    } catch (err) {\n      // 오류 났을 때 예외 처리\n      console.error(err);\n      setMessage('Server Error');\n    }\n  };\n\n  // return은 코드 전체 함수가 화면에 무엇을 보여줄지 반환하는 것, HTML과 매우 유사함\n  // input은 입력받는 박스 만드는 역할\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      value: nickname,\n      onChange: e => setNickname(e.target.value),\n      style: {\n        marginBottom: '20px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: {\n        marginBottom: '20px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        marginBottom: '30px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n// App 컴포넌트를 외부에서도 사용할 수 있게 export (기본 export)\n_s(Signup, \"4CsEbO/5QXNPV/dpqzQKSxHz/cw=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signup","_s","nickname","setNickname","email","setEmail","password","setPassword","message","setMessage","navigate","handleSignup","res","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","err","console","error","style","display","flexDirection","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginBottom","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Workspace/GitHub/Expotential-PS/Expotential-PS/src/pages/Signup.jsx"],"sourcesContent":["// Signup.jsx\r\nimport React, { useState } from 'react'; // 상태 저장 기능 이용 useState\r\nimport { useNavigate } from 'react-router-dom'; // URL에 따라서 화면 이동시켜야 하기 때문에 useNavigate 사용\r\n\r\n// const는 변수 선언의 역할로 함수도 넣을 수 있음\r\n// => 는 앞으로 이러한 함수들을 선언된 변수에 추가할 것이다를 암시\r\nconst Signup = () => {\r\n\t// 변수 선언하고 변수 값 바꾸는 함수 선언하고 반복\r\n  const [nickname, setNickname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  //Signup 안에서 useNavigate 사용되기 때문에 무조건 변수 선언 부분에 넣어줘야 함\r\n\r\n\t// 얘도 변수 선언이지만 async를 쓰면 서버 응답 기다릴 수 있는 await 사용 가능해서 씀(비동기 함수)\r\n  const handleSignup = async () => {\r\n\t  // 하나라도 입력 안된 상황 처리\r\n    if (!nickname || !email || !password) {\r\n      setMessage('모든 항목을 입력해주세요.');\r\n      return;\r\n    }\r\n\t\t// 일단 시도해보는 녀석\r\n\t\t// 여기서 fetch는 브라우저에서 해당 서버에 요청을 보내는 함수, GEt이나 POSt. 여기서는 POST임\r\n    try {\r\n      const res = await fetch('http://localhost:4000/signup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ nickname, email, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        alert('Signup Completed!');\r\n        navigate('/login'); // 가입 완료 후 로그인 페이지로 이동\r\n      } else {\r\n        setMessage(` ${data.message || 'Signup Failed'}`);\r\n      }\r\n    } catch (err) { // 오류 났을 때 예외 처리\r\n      console.error(err);\r\n      setMessage('Server Error');\r\n    }\r\n  };\r\n\t\r\n\t// return은 코드 전체 함수가 화면에 무엇을 보여줄지 반환하는 것, HTML과 매우 유사함\r\n\t// input은 입력받는 박스 만드는 역할\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '80vh'\r\n    }}>\r\n      <h1>회원가입</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"닉네임\"\r\n        value={nickname}\r\n        onChange={(e) => setNickname(e.target.value)}\r\n        style={{ marginBottom: '20px', width: '200px' }}\r\n      />\r\n\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"이메일\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={{ marginBottom: '20px', width: '200px' }}\r\n      />\r\n\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"비밀번호\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        style={{ marginBottom: '30px', width: '200px' }}\r\n      />\r\n\r\n      <button onClick={handleSignup}>가입하기</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// App 컴포넌트를 외부에서도 사용할 수 있게 export (기본 export)\r\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}